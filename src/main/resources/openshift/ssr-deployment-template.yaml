# 1.image repo link, 2. config-map-value 3.Resource limit, context-path must start with a /
kind: "Template"
apiVersion: "v1"
metadata:
  name: "deployment-template"
labels:
  template: "environment-template"
  app: SPAS001
  paas.redhat.com/appcode: ${appcode}
objects:
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      name: ${WEBSITE}-${APP}-${ENV}
      labels:
        website: ${WEBSITE}
        environment: ${ENV}
        app: ${APP}
        app.mpp.io/managed-by: spaship
        paas.redhat.com/appcode: ${CMDB_CODE}
    data:
      NODE_EXTRA_CA_CERTS: "/var/run/secrets/redhat-ca-bundle/ca-bundle.crt"
      BASE_PATH: "${CONTEXT-PATH}"
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${WEBSITE}-${APP}-${ENV}-app-sec"
      labels:
        website: ${WEBSITE}
        environment: ${ENV}
        app: ${APP}
        app.mpp.io/managed-by: spaship
        paas.redhat.com/appcode: ${CMDB_CODE}
    stringData:
      DEFAULT: "S3CR3T"
    type: Opaque
  - kind: Secret
    apiVersion: v1
    metadata:
      name: "${IMAGE-PULL-SECRET-NAME}"
    data:
      .dockerconfigjson: "${REPO-ACCESS-CREDS}"
    type: kubernetes.io/dockerconfigjson
  - kind: Service
    apiVersion: v1
    metadata:
      name: ${WEBSITE}-${APP}-${ENV}
      labels:
        website: ${WEBSITE}
        environment: ${ENV}
        app: ${APP}
        app.mpp.io/managed-by: spaship
        paas.redhat.com/appcode: ${CMDB_CODE}
    spec:
      ports:
        - port: 3000
          targetPort: "${{CONPORT}}"
          name: http
      selector:
        website: ${WEBSITE}
        environment: ${ENV}
        app: ${APP}
        app.mpp.io/managed-by: spaship
  - kind: Route
    apiVersion: route.openshift.io/v1
    metadata:
      name: ${WEBSITE}-${APP}-${ENV}
      labels:
        shard: ${SHARD}
        paas.redhat.com/appcode: ${CMDB_CODE}
      annotations:
        #haproxy.router.openshift.io/disable_cookies: 'true'
        haproxy.router.openshift.io/timeout: 5m
        #haproxy.router.openshift.io/rewrite-target: "${REWRITE-PATH}"
    spec:
      host: route-${WEBSITE}-${ENV}-${APP_INSTANCE_PREFIX}.${ROUTER-DOMAIN}
      path: ${CONTEXT-PATH}
      to:
        kind: Service
        name: ${WEBSITE}-${APP}-${ENV}
      port:
        targetPort: http
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
      wildcardPolicy: None
  - kind: Deployment
    apiVersion: apps/v1
    metadata:
      name: ${WEBSITE}-${APP}-${ENV}
      website: ${WEBSITE}
      labels:
        website: ${WEBSITE}
        environment: ${ENV}
        app: ${APP}
        app.mpp.io/managed-by: spaship
        app.kubernetes.io/part-of: ${WEBSITE}-${ENV}
        app.openshift.io/runtime: js
        paas.redhat.com/appcode: ${CMDB_CODE}
    spec:
      selector:
        matchLabels:
          website: ${WEBSITE}
          environment: ${ENV}
          app: ${APP}
          app.mpp.io/managed-by: spaship
      replicas: ${REPLICAS}
      template:
        metadata:
          labels:
            website: ${WEBSITE}
            environment: ${ENV}
            app: ${APP}
            app.mpp.io/managed-by: spaship
        spec:
          containers:
            # Main container to serve data
            - name: app-container
              image: "${IMAGE-URL}"
              imagePullPolicy: Always
              resources:
                requests:
                  cpu: ${RESOURCE-REQ-CPU}
                  memory: ${RESOURCE-REQ-MEM}
                limits:
                  cpu: ${RESOURCE-LIM-CPU}
                  memory: ${RESOURCE-LIM-MEM}
              ports:
                - containerPort: "${{CONPORT}}"
              livenessProbe:
                httpGet:
                  path: "${HEALTH-CHECK-PATH}"
                  port: "${{CONPORT}}"
                initialDelaySeconds: 2
                failureThreshold: 10
                periodSeconds: 10
              readinessProbe:
                httpGet:
                  path: "${HEALTH-CHECK-PATH}"
                  port: "${{CONPORT}}"
                initialDelaySeconds: 2
                failureThreshold: 5
                periodSeconds: 10
              envFrom:
                - configMapRef:
                    name: ${WEBSITE}-${APP}-${ENV}
                - secretRef:
                    name: ${WEBSITE}-${APP}-${ENV}-app-sec
              volumeMounts:
                - name: ca-crt
                  mountPath: /var/run/secrets/redhat-ca-bundle
          volumes:
            - name: ca-crt
              configMap:
                name: redhat-ca-bundle
parameters:
  - name: "IMAGE-URL"
    value: "quay.io/spaship/ssr-demo-one:latest"
    description: "Container image url"
    required: false
  - name: "WEBSITE"
    value: "demonstration"
    description: "Name of the website or web property"
    required: false
  - name: "APP"
    value: "myweb"
    description: "Name of the application SPA"
    required: false
  - name: "ENV"
    value: "dev"
    description: "Name of the environment"
    required: false
  - name: "SPASHIP-APPCODE"
    value: "SPAS001"
    description: "App code of the platform, used for mp+ maintenance purpose"
    required: false
  - name: "SHARD"
    value: "internal"
    description: "shared required for enabling a route in mp+"
    required: false
  - name: "ROUTER-DOMAIN"
    value: "apps.int.grey.dev.iad2.dc.paas.redhat.com"
    description: "Router domain, used for constructing the url"
    required: false
  - name: "CONTEXT-PATH"
    value: ""
    description: "context path under which the application will be deployed."
    required: false
  - name: "RESOURCE-REQ-CPU"
    value: "200m"
    description: "minimum cpu for the app"
    required: false
  - name: "RESOURCE-REQ-MEM"
    value: "256Mi"
    description: "minimum ram required for the app"
    required: false
  - name: "RESOURCE-LIM-CPU"
    value: "300m"
    description: "Maximum cpu required for the app"
    required: false
  - name: "RESOURCE-LIM-MEM"
    value: "512Mi"
    description: "Maximum ram required for the app"
    required: false
  - name: CONPORT
    value: "3000"
    description: "container and default port number for the application"
    required: true
  - name: "HEALTH-CHECK-PATH"
    value: "/"
    description: "health check path for determining pod lveness and readiness status"
    required: false
  - name: "REWRITE-PATH"
    value: "/"
    description: "Rewrite path attribute in router object"
    required: false
  - name: "IMAGE-PULL-SECRET-NAME"
    description: "The secret name to use for pulling images"
    required: false
  - name: "REPO-ACCESS-CREDS"
    description: image repo access credentials
    required: true
  - name: "CMDB_CODE"
    value: "SPAS-001"
    description: "cmdb code for the application"
    required: true
  - name: "APP_INSTANCE_PREFIX"
    description: "application instance prefix"
    required: true
  - name: "REPLICAS"
    value: "1"
    description: "replicas for the application"
    required: true